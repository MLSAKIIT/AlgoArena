// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                      String      @id @default(auto()) @map("_id") @db.ObjectId
  name                    String?
  email                   String      @unique
  password                String
  emailVerified           Boolean     @default(false)
  verificationToken       String?
  resetPasswordToken      String?
  resetPasswordExpiration DateTime?
  createdAt               DateTime    @default(now())
  updatedAt               DateTime    @updatedAt
  posts                   Post[]
  postLikes               PostLike[]
  savedPosts              SavedPost[]
}

model Post {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  content    String?
  tags       String
  domain     String
  createdAt  DateTime    @default(now())
  authorId   String      @db.ObjectId
  user       User        @relation(fields: [authorId], references: [id], onDelete: Cascade)
  postLikes  PostLike[]
  savedPosts SavedPost[]
}

model PostLike {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String   @db.ObjectId

  @@unique([userId, postId])
}

model SavedPost {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String   @db.ObjectId

  @@unique([userId, postId])
}
